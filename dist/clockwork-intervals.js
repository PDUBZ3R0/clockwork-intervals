const clockwork={intervals:function(e){let t=function(s){const a=new Blob(['{let e={};self.onmessage=function({id:s,type:t,milliseconds:a}){switch(t){case"setTimeout":setTimeout((function(){self.postMessage(s)}),a);break;case"setInterval":e[s]=setInterval((function(){self.postMessage(s)}),a);break;case"clearInterval":clearInterval(e[s])}}}'],{type:"application/javascript"});return t=new Worker(URL.createObjectURL(a)),t.addEventListener("message",(function(t){const{task:s,repeats:a}=e.load(t.id);a||e.remove(t.id),s()})),t}();return{setInterval(s,a){const n=e.save(s,!0);return t.postMessage({id:n,type:"setInterval",milliseconds:a}),n},setTimeout(s,a){const n=e.save(s,!1);return t.postMessage({id:n,type:"setTimeout",milliseconds:a}),n},clearInterval(e){t.postMessage({id:e,type:"clearInterval"})},clearTimeout(e){t.postMessage({id:e,type:"clearInterval"})}}}((e=>{let t=0,s={};return{id(e){const s=`${t}:${btoa(e.toString().replace(/\s/g,"").substring(0,24))}`;return t++,s},save({task:e,repeats:t}){const a=this.id(e);return s[a]={task:e,repeats:t},a},load:e=>s[e],remove(e){s[e]=void 0}}})())};